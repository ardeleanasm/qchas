-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A library for implementing Quantum Algorithms
--   
--   A library useful for implementing Quantum Algorithms. It contains
--   definitions of Quantum Gates, Qubits.
@package qchas
@version 1.0.1.0


-- | <ul>
--   <li>Module : Qubits</li>
--   <li>Description : Definitions of |0&gt;, |1&gt;, |+&gt; and
--   |-&gt;</li>
--   <li>Copyright : (c) Mihai Sebastian Ardelean, 2017</li>
--   <li>License : BSD3</li>
--   <li>Maintainer : ardeleanasm@gmail.com</li>
--   <li>Portability : POSIX</li>
--   </ul>
module Qubits

-- | <ul>
--   <li>qOne function is used to represent a 1 qubit |1&gt;</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; qOne
--   (2&gt;&lt;1)
--   [ 0.0 :+ 0.0
--   , 1.0 :+ 0.0 ]
--   </pre>
qOne :: Qubit

-- | <ul>
--   <li>qZero function is used to represent a 0 qubit |0&gt;</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; qZero
--   (2&gt;&lt;1)
--   [ 1.0 :+ 0.0
--   , 0.0 :+ 0.0 ]
--   </pre>
qZero :: Qubit

-- | <ul>
--   <li>qPlus function is used to represent a + qubit |+&gt;</li>
--   <li>|+&gt; can be also obtained by applying Hadamard Gate on |0&gt;.
--   See <a>apply</a> for more information</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; qPlus
--   (2&gt;&lt;1)
--   [ 0.7071067811865475 :+ 0.0
--   , 0.7071067811865475 :+ 0.0 ]
--   </pre>
qPlus :: Qubit

-- | <ul>
--   <li>qMinus function is used to represent a - qubit |-&gt;</li>
--   <li>Same as |+&gt;, qubit |-&gt; can be obtained by applying Hadamard
--   Gate on |1&gt;. See <a>apply</a> for more information</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; qMinus
--   (2&gt;&lt;1)
--   [       0.7071067811865475 :+ 0.0
--   , (-0.7071067811865475) :+ (-0.0) ]
--   </pre>
qMinus :: Qubit
data Qubit
Qubit :: Matrix C -> Qubit

-- | Qubit constructor accepts a parameter of type Matrix C
[qubitState] :: Qubit -> Matrix C
instance GHC.Show.Show Qubits.Qubit
instance GHC.Classes.Eq Qubits.Qubit


-- | <ul>
--   <li>Module : Gates</li>
--   <li>Description : Basic Quantum Gates</li>
--   <li>Copyright : (c) Mihai Sebastian Ardelean, 2017</li>
--   <li>License : BSD3</li>
--   <li>Maintainer : ardeleanasm@gmail.com</li>
--   <li>Portability : POSIX</li>
--   </ul>
module Gates

-- | <ul>
--   <li>xGate function represent a Pauli X-Gate</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; xGate
--   (2&gt;&lt;2)
--   [ 0.0 :+ 0.0, 1.0 :+ 0.0
--   , 1.0 :+ 0.0, 0.0 :+ 0.0 ]
--   </pre>
xGate :: Gate

-- | <ul>
--   <li>yGate function represent a Pauli Y-Gate</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; yGate
--   (2&gt;&lt;2)
--   [ 0.0 :+ 0.0, 0.0 :+ (-1.0)
--   , 0.0 :+ 1.0,    0.0 :+ 0.0 ]
--   </pre>
yGate :: Gate

-- | <ul>
--   <li>zGate function represent a Pauli Z-Gate</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; zGate
--   (2&gt;&lt;2)
--   [ 1.0 :+ 0.0,       0.0 :+ 0.0
--   , 0.0 :+ 0.0, (-1.0) :+ (-0.0) ]
--   </pre>
zGate :: Gate

-- | <ul>
--   <li>hGate function represent a Hadamard Gate</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; hGate
--    (2&gt;&lt;2)
--    [ 0.7071067811865475 :+ 0.0,    0.7071067811865475 :+ 0.0
--    , 0.7071067811865475 :+ 0.0, (-0.7071067811865475) :+ 0.0 ]
--   </pre>
hGate :: Gate

-- | <ul>
--   <li>cPhaseShifGate function represent a Controlled Phase-Shift
--   Gate</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; cPhaseShifGate
--   (4&gt;&lt;4)
--   [ 1.0 :+ 0.0, 0.0 :+ 0.0, 0.0 :+ 0.0,       0.0 :+ 0.0
--   , 0.0 :+ 0.0, 1.0 :+ 0.0, 0.0 :+ 0.0,       0.0 :+ 0.0
--   , 0.0 :+ 0.0, 0.0 :+ 0.0, 1.0 :+ 0.0,       0.0 :+ 0.0
--   , 0.0 :+ 0.0, 0.0 :+ 0.0, 0.0 :+ 0.0, (-1.0) :+ (-0.0) ]
--   </pre>
cPhaseShifGate :: Gate

-- | <ul>
--   <li>cNotGate function represent a Controlled-Not Gate</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; cNotGate
--   (4&gt;&lt;4)
--   [ 1.0 :+ 0.0, 0.0 :+ 0.0, 0.0 :+ 0.0, 0.0 :+ 0.0
--   , 0.0 :+ 0.0, 1.0 :+ 0.0, 0.0 :+ 0.0, 0.0 :+ 0.0
--   , 0.0 :+ 0.0, 0.0 :+ 0.0, 0.0 :+ 0.0, 1.0 :+ 0.0
--   , 0.0 :+ 0.0, 0.0 :+ 0.0, 1.0 :+ 0.0, 0.0 :+ 0.0 ]
--   </pre>
cNotGate :: Gate

-- | <ul>
--   <li>swapGate function represent a Swap Gate</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; swapGate
--   (4&gt;&lt;4)
--   [ 1.0 :+ 0.0, 0.0 :+ 0.0, 0.0 :+ 0.0, 0.0 :+ 0.0
--   , 0.0 :+ 0.0, 0.0 :+ 0.0, 1.0 :+ 0.0, 0.0 :+ 0.0
--   , 0.0 :+ 0.0, 1.0 :+ 0.0, 0.0 :+ 0.0, 0.0 :+ 0.0
--   , 0.0 :+ 0.0, 0.0 :+ 0.0, 0.0 :+ 0.0, 1.0 :+ 0.0 ]
--   </pre>
swapGate :: Gate
data Gate
Gate :: Matrix C -> Gate

-- | Gate constructor accepts a parameter of type Matrix C
[gateMatrix] :: Gate -> Matrix C
instance GHC.Show.Show Gates.Gate
instance GHC.Classes.Eq Gates.Gate


-- | <ul>
--   <li>Module : Utils</li>
--   <li>Description : Definitions of basic mathematical operations on
--   qubits and gates</li>
--   <li>Copyright : (c) Mihai Sebastian Ardelean, 2017</li>
--   <li>License : BSD3</li>
--   <li>Maintainer : ardeleanasm@gmail.com</li>
--   <li>Portability : POSIX</li>
--   </ul>
module Utils

-- | <ul>
--   <li>entangle function is used to perform the Kronecker product between
--   two qubits.</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; entangle qZero qOne
--   (4&gt;&lt;1)
--    [ 0.0 :+ 0.0
--    , 1.0 :+ 0.0
--    , 0.0 :+ 0.0
--    , 0.0 :+ 0.0 ]
--   </pre>
entangle :: Qubit -> Qubit -> Qubit

-- | <ul>
--   <li>apply function is used to apply a gate on a qubit</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; apply hGate qZero
--    (2&gt;&lt;1)
--    [ 0.7071067811865475 :+ 0.0
--    , 0.7071067811865475 :+ 0.0 ]
--   </pre>
apply :: Gate -> Qubit -> Qubit

-- | <ul>
--   <li>|&gt; function have the same effect like <a>apply</a>.</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; qZero |&gt; hGate
--    (2&gt;&lt;1)
--    [ 0.7071067811865475 :+ 0.0
--    , 0.7071067811865475 :+ 0.0 ]
--   </pre>
(|>) :: Qubit -> Gate -> Qubit

-- | <ul>
--   <li>gateProduct function is used to create gates that can be used on
--   multiple qubits</li>
--   </ul>
gateProduct :: Gate -> Gate -> Gate

-- | <ul>
--   <li>Kronecker product operator is used to create gates that can be
--   used on multiple qubits</li>
--   </ul>
(<+>) :: Gate -> Gate -> Gate


-- | <ul>
--   <li>Module : MeasurementPerformer</li>
--   <li>Description : Definition of qubit measure function</li>
--   <li>Copyright : (c) Mihai Sebastian Ardelean, 2017</li>
--   <li>License : BSD3</li>
--   <li>Maintainer : ardeleanasm@gmail.com</li>
--   <li>Portability : POSIX</li>
--   </ul>
module MeasurementPerformer

-- | <ul>
--   <li>measure function is used to perform qubit measurement</li>
--   </ul>
--   
--   <pre>
--   &gt;&gt;&gt; measure circuit
--   Qubit {qubitState = (4&gt;&lt;1)
--   [ 0.0 :+ 0.0
--   , 1.0 :+ 0.0
--   , 0.0 :+ 0.0
--   , 0.0 :+ 0.0 ]}
--   </pre>
measure :: Qubit -> Qubit
